# version: "3"

# services:
#   db:
#     image: postgres:latest
#     # env_file:
#     #     - ./.env.dev
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DB=postgres
#     volumes:
#       - ./pg:/var/lib/postgresql/data

#   app:
#     build: .
#     command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python3 manage.py collectstatic --no-input; python3 manage.py makemigrations forcode'
#     environment:
#       - DJANGO_SETTINGS_MODULE=mysite.settings
#     volumes:

#       - .:/forcode
#     depends_on:
#       - db
#     # restart: on-failure

  # api:
  #   build: .
  #   command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn mysite.asgi:fastapp --port 8000 --host 0.0.0.0 --reload'
  #   depends_on:
  #     - db
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=mysite.settings
  #   volumes:
  #     - .:/forcode/.
  #   restart: on-failure
    
  # nginx:
  #   command: nginx -g "daemon off;"
  #   depends_on:
  #     - api
  #     - app
  #   image: nginx:alpine
  #   # restart: on-failure
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - static:/var/www/app/static
  #   ports:
  #     - "127.0.0.1:8000:8000"
  

version: '3'

services:
  
  db:
    image: postgres
    volumes:
      - ./forcode_db:/var/lib/postgresql/data/       
    environment:   
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=postgres
      
  api:
      build: .
      command: python manage.py runserver 0.0.0.0:8000
      volumes:
        - .:/forcode
      ports:
        - "8000:8000"
      depends_on:
        - db
  